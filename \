#include "shell.h"
#include <signal.h>

int main(int argc, char **argv, char *envv[])
{
	char *line = NULL, *pathcommand = NULL, *path = NULL;
	size_t bufsize = 0;
	ssize_t linesize = 0;
	char **commandargs = NULL, **paths = NULL;
	(void)envv, (void)argv;

	if (argc < 1)
		return (-1);

	signal(SIGINT, signal_handler);

	path = path_handler();
	paths = tokenize(path);

	while (1)
	{
		freebuff(commandargs);
		free(pathcommand);
		prompt();
		linesize = getline(&line, &bufsize, stdin);
		if (linesize < 0)
			break;
		info.count++;
		if (line[linesize - 1] == '\n')
			line[linesize - 1] = '\0';
		commandargs = tokenize(line);
		if (!commandargs || !(*commandargs) || !(**commandargs))
			continue;
		if (checkbuiltin(commandargs, line))
			continue;
		pathcommand = checkpath(paths, commandargs[0]);
		if (!pathcommand)
			perror(argv[0]);
		else
			execute(pathcommand, commandargs);
	}

	freebuff(commandargs);
	freebuff(paths);
	free(line);
	return (0);
}
